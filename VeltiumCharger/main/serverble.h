#ifndef __SERVER_BLE_H
#define __SERVER_BLE_H

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>


#define NUMBER_OF_SERVICES 		(1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1)
#define NUMBER_OF_CHARACTERISTICS	(4+5+11+3+6+4+1+4+4+1+3+1+1+4+2+1+3+6+1) 
#define MAX_BLE_FIELDS			(NUMBER_OF_SERVICES+NUMBER_OF_CHARACTERISTICS) 

#define TYPE_SERVICE		0
#define TYPE_CHARACTERISTIC	1 


enum indexServices
{
        SERV_LUMI_COLOR = 0,
	SERV_STATUS = 1,
	SERV_MEASURES = 2,
	SERV_ENERGY_RECORD = 3,
	SERV_TIME_DATE	= 4,
	SERV_CHARGING = 5,
	SERV_SCHED_CHARGING = 6,
	SERV_VCD_NAME_USERS = 7,
	SERV_TEST = 8,
	SERV_MAN_LOCK_UNLOCK = 9,
	SERV_BOOT_LOADER = 10,
	SERV_RESET = 11,
	SERV_CLAVE = 12,
	SERV_RECORDING = 13,
	SERV_VERSIONES = 14,
	SERV_CONFIGURACION = 15,
	SERV_AUTENTICACION = 16,
	SERV_DOMESTIC_CONSUMPTION = 17,
	SERV_ERROR_STATUS = 18
};

enum indexCharacteristicsAll
{
	//LEDS
        CHA_Luminisity_Level = 1,
        CHA_R_Led_Color = 2,
        CHA_G_Led_Color = 3,
        CHA_B_Led_Color = 4,
	//STATUS
	HPT_STATUS = 6,
	ICP_STATUS = 7,
	MCB_STATUS = 8,
	RCD_STATUS = 9,
	CONN_LOCK_STATUS = 10,
	//MEASURES
	MAX_CURRENT_CABLE = 12,
	INSTALATION_CURRENT_LIMIT = 13,	
	CURRENT_COMMAND = 14,
	INST_CURRENT = 15,
	INST_VOLTAGE = 16,
	ACTIVE_POWER = 17,
	REACTIVE_POWER = 18,
	ACTIVE_ENERGY = 19,
	REACTIVE_ENERGY = 20,
	APPARENT_POWER = 21,
	POWER_FACTOR = 22,
	//ENREGY_RECORD
	RECORD_RECORD = 24,
	RECORD_USER = 25,
	RECORD_SESSION_NUMBER = 26,
	//TIME_DATE
	DATE_TIME = 28,
	CONNECTION_DATE_TIME = 29,
	DISCONNECTION_DATE_TIME = 30,
	DELTA_DELAY_FOR_CHARGING =31,
	CHARGING_START_TIME = 32,
	CHARGING_STOP_TIME = 33,
	//CHARGING
	INSTANT_DELAYED = 35,
	START_STOP_START_MODE = 36,
	BLE_MANUAL_START = 37,
	BLE_MANUAL_STOP = 38,
	//SCHED_CHARGING
	SCHEDULE_MATRIX = 40,
	//VCD_NAME_USERS
	CHARGER_DEVICE_ID = 42,
	USERS_NUMBER = 43,
	UI_X_USER_ID = 44,
	USER_INDEX = 45,
	//TEST
	LAUNCH_RCD_PE_TEST = 47,
	RCD_PE_TEST_RESULT = 48,
	LAUNCH_MCB_TEST = 49,
	MCB_TEST_RESULT = 50,
	//MAN_LOCK_UNLOCK
	LOCKING_MACHANISM_ON_OFF = 52,
	//BOOT_LOADER
	PROTECTION_CODE = 54,
	LOAD_SW_APP = 55,
	BINARY_BLOCK = 56,
	//RESET
	RESET = 58,
	//CLAVE
	WRITE_PASS = 60,
	//RECORDING
	REC_CAPACITY = 62,
	REC_LAST = 63,
	REC_INDEX = 64,
	REC_LAPS = 65,
	//VERSIONES
	VERSION_FIRMWARE = 67,
	VERSION_FIRM_BLE = 68,
	//CONFIGURACION
	AUTENTICATION_MODES = 70,
	//AUTENTICACION
	SERIAL_NUMBER = 72,
	MATRIX = 73,
	TOKEN = 74,
	//DOMESTIC_CONSUMPTION
	REAL_CURRENT_LIMIT = 76,
	DOMESTIC_CURRENT = 77,
	KS = 78,
	FCT = 79,
	FS = 80,
	POTENCIA_CONTRATADA = 81,
	//ERROR_STATUS
	ERROR_STATUS = 83

};

enum indexCharacteristics
{
	//LEDS
        BLE_CHA_CHA_Luminisity_Level = 0,
        BLE_CHA_CHA_R_Led_Color = 1,
        BLE_CHA_CHA_G_Led_Color = 2,
        BLE_CHA_CHA_B_Led_Color = 3,
	//STATUS
	BLE_CHA_HPT_STATUS = 4,
	BLE_CHA_ICP_STATUS = 5,
	BLE_CHA_MCB_STATUS = 6,
	BLE_CHA_RCD_STATUS = 7,
	BLE_CHA_CONN_LOCK_STATUS = 8,
	//MEASURES
	BLE_CHA_MAX_CURRENT_CABLE = 9,
	BLE_CHA_INSTALATION_CURRENT_LIMIT = 10,	
	BLE_CHA_CURRENT_COMMAND = 11,
	BLE_CHA_INST_CURRENT = 12,
	BLE_CHA_INST_VOLTAGE = 13,
	BLE_CHA_ACTIVE_POWER = 14,
	BLE_CHA_REACTIVE_POWER = 15,
	BLE_CHA_ACTIVE_ENERGY = 16,
	BLE_CHA_REACTIVE_ENERGY = 17,
	BLE_CHA_APPARENT_POWER = 18,
	BLE_CHA_POWER_FACTOR = 19,
	//ENREGY_RECORD
	BLE_CHA_RECORD_RECORD = 20,
	BLE_CHA_RECORD_USER = 21,
	BLE_CHA_RECORD_SESSION_NUMBER = 22,
	//TIME_DATE
	BLE_CHA_DATE_TIME = 23,
	BLE_CHA_CONNECTION_DATE_TIME = 24,
	BLE_CHA_DISCONNECTION_DATE_TIME = 25,
	BLE_CHA_DELTA_DELAY_FOR_CHARGING =26,
	BLE_CHA_CHARGING_START_TIME = 27,
	BLE_CHA_CHARGING_STOP_TIME = 28,
	//CHARGING
	BLE_CHA_INSTANT_DELAYED = 29,
	BLE_CHA_START_STOP_START_MODE = 30,
	BLE_CHA_BLE_MANUAL_START = 31,
	BLE_CHA_BLE_MANUAL_STOP = 32,
	//SCHED_CHARGING
	BLE_CHA_SCHEDULE_MATRIX = 33,
	//VCD_NAME_USERS
	BLE_CHA_CHARGER_DEVICE_ID = 34,
	BLE_CHA_USERS_NUMBER = 35,
	BLE_CHA_UI_X_USER_ID = 36,
	BLE_CHA_USER_INDEX = 37,
	//TEST
	BLE_CHA_LAUNCH_RCD_PE_TEST = 38,
	BLE_CHA_RCD_PE_TEST_RESULT = 39,
	BLE_CHA_LAUNCH_MCB_TEST = 40,
	BLE_CHA_MCB_TEST_RESULT = 41,
	//MAN_LOCK_UNLOCK
	BLE_CHA_LOCKING_MACHANISM_ON_OFF = 42,
	//BOOT_LOADER
	BLE_CHA_PROTECTION_CODE = 43,
	BLE_CHA_LOAD_SW_APP = 44,
	BLE_CHA_BINARY_BLOCK = 45,
	//RESET
	BLE_CHA_RESET = 46,
	//CLAVE
	BLE_CHA_WRITE_PASS = 47,
	//RECORDING
	BLE_CHA_REC_CAPACITY = 48,
	BLE_CHA_REC_LAST = 49,
	BLE_CHA_REC_INDEX = 50,
	BLE_CHA_REC_LAPS = 51,
	//VERSIONES
	BLE_CHA_VERSION_FIRMWARE = 52,
	BLE_CHA_VERSION_FIRM_BLE = 53,
	//CONFIGURACION
	BLE_CHA_AUTENTICATION_MODES = 54,
	//AUTENTICACION
	BLE_CHA_SERIAL_NUMBER = 55,
	BLE_CHA_MATRIX = 56,
	BLE_CHA_TOKEN = 57,
	//DOMESTIC_CONSUMPTION
	BLE_CHA_REAL_CURRENT_LIMIT = 58,
	BLE_CHA_DOMESTIC_CURRENT = 59,
	BLE_CHA_KS = 60,
	BLE_CHA_FCT = 61,
	BLE_CHA_FS = 62,
	BLE_CHA_POTENCIA_CONTRATADA = 63,
	//ERROR_STATUS
	BLE_CHA_ERROR_STATUS = 64
};

typedef struct _BLE_FIELD
{
	uint8_t type;	// service or characteristic 0 or 1
	indexServices indexServ;
	BLEUUID	uuid;
	uint8_t numberOfCharacteristics;
	uint32_t properties;
	uint16_t handle;
	indexCharacteristicsAll indexCharacteristicAll;
	indexCharacteristics indexCharacteristic;
	uint8_t descriptor2902;
}BLE_FIELD;


void serverbleInit(void);
bool serverbleGetConnected(void);

void serverbleTask(void *arg);
void serverbleSetCharacteristic(uint8_t * data, int len, uint16_t handle);
void serverbleNotCharacteristic ( uint8_t *data, int len, uint16_t handle );
void changeAdvName( uint8_t * name);

#endif // __SERVER_BLE_H
